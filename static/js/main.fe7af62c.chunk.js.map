{"version":3,"sources":["state/movies/moviesActions.ts","state/movies/moviesReducer.ts","state/movieDetails/movieDetailsAction.ts","state/movieDetails/movieDetailsReducer.ts","state/application/applicationActions.ts","state/application/applicationReducer.ts","state/search/searchActions.ts","state/search/searchReducer.ts","state/rootReducer.ts","common/service/api/getMovie.ts","common/service/mapper.ts","common/constants.ts","effects/loadMovieDetailsSaga.ts","effects/loadMoviesFromStorageSaga.ts","common/service/api/searchMovie.ts","effects/searchMoviesSaga.ts","effects/rootSaga.ts","core/createStore.ts","common/routing/routes.ts","common/components/PageWrapper/PageWrapper.tsx","core/AppPage.tsx","pages/movie-page/MoviePageData.tsx","common/components/ErrorNotification/ErrorNotification.tsx","pages/movie-page/components/MoviePoster.tsx","pages/movie-page/components/MovieInfo.tsx","pages/movie-page/components/MovieRating.tsx","pages/movie-page/components/MoviePlot.tsx","pages/movie-page/MoviePageDisplay.tsx","pages/shared/components/SearchInput/SearchInputLabel.tsx","pages/shared/components/SearchInput/SearchInput.tsx","pages/shared/components/ViewHistory/ViewHistoryPoster.tsx","pages/shared/components/ViewHistory/ViewHistoryItem.tsx","pages/shared/components/ViewHistory/ViewHistory.tsx","pages/movie-page/MoviePage.tsx","pages/search-page/SearchPage.tsx","core/AppRouter.tsx","core/App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionNames","ADD_MOVIES","createAction","reducer","handleActions","state","action","payload","reduce","movies","movie","id","LOAD_MOVIE_DETAILS","MOVIE_LOADED_SUCCESS","MOVIE_LOADED_ERROR","movieId","error","isLoading","isLoaded","currentId","LOAD_APP","APP_LOADED","UPDATE_QUERY","START_LOADING","RESULTS_ERROR","RESULTS_LOADED","query","results","combineReducers","moviesReducer","movieDetails","movieDetailsReducer","application","applicationReducer","search","searchReducer","isError","response","Response","getMovie","a","url","process","axios","get","data","Error","movieFromApi","imdbID","genre","Genre","language","Language","plot","Plot","poster","Poster","rating","Number","parseFloat","imdbRating","votes","imdbVotes","title","Title","year","Year","actors","Actors","director","Director","runtime","Runtime","writer","Writer","released","Released","searchResultFromApi","_loadMovieDetails","watchLoadMovieDetails","call","put","select","set","Object","entries","map","message","takeLatest","_loadMoviesFromLocalStorage","watchAppLoaded","storageData","searchMovie","findMovies","watchUpdateQuery","length","Search","debounce","all","definition","path","useStyle","makeStyles","theme","paper","paddingTop","spacing","paddingBottom","PageWrapper","children","style","Box","mt","Paper","className","appBarSpacer","mixins","toolbar","appTitle","color","typography","h6","AppPage","AppBar","Toolbar","to","Typography","variant","component","Container","MoviePageData","useParams","useSelector","dispatch","useDispatch","useEffect","errorNotification","palette","main","border","padding","ErrorNotification","container","image","width","MoviePoster","src","alt","item","display","justifyContent","flexDirection","fontFamily","borderBottom","divider","fontSize","pxToRem","fontWeight","fontWeightBold","flex","value","MovieInfo","MovieRating","Rating","readOnly","max","MoviePlot","wordBreak","MoviePageDisplay","Grid","xs","sm","CircularProgress","marginLeft","SearchInputLabel","textDecoration","Avatar","SearchInput","onInputChange","event","target","Autocomplete","options","renderOption","option","getOptionLabel","renderInput","params","TextField","onChange","placeholder","InputProps","endAdornment","size","posterContainer","margin","height","fallback","backgroundColor","grey","ViewHistoryPoster","textAlign","ViewHistoryItem","marginTop","marginBottom","getLoadedMovies","slice","ViewHistory","key","md","lg","inputContainer","breakpoints","up","MoviePage","Divider","SearchPage","isAppLoaded","basename","exact","App","store","initialState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","rootReducer","createStoreWithMiddleware","compose","applyMiddleware","_createStore","run","rootSaga","createStore","AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fe7af62c.chunk.js","sourcesContent":["import { IMovie } from \"../../common/types/state/IMovie\";\nimport { createAction } from \"redux-actions\";\n\nexport const ActionNames = {\n  ADD_MOVIES: '[movies] ADD_MOVIES',\n};\n\nexport type ActionTypes = IMovie[];\n\nexport const ADD_MOVIES = createAction<IMovie[]>(ActionNames.ADD_MOVIES);","import { IMoviesState } from './moviesState';\nimport { handleActions } from 'redux-actions';\nimport { ActionNames, ActionTypes } from './moviesActions';\nimport { IMovie } from '../../common/types/state/IMovie';\n\nconst initialState: IMoviesState = {\n\n};\n\nconst reducer = handleActions<IMoviesState, ActionTypes>({\n  [ActionNames.ADD_MOVIES]: (state, action) => {\n    const movies = action.payload as IMovie[];\n    return movies.reduce<IMoviesState>((movies, movie) => {\n      return {\n        ...movies,\n        [movie.id]: movie,\n      }\n    }, state);\n  }\n}, initialState);\n\nexport default reducer;","import { createAction } from \"redux-actions\";\n\nexport const ActionNames = {\n  LOAD_MOVIE_DETAILS: '[movieDetails] LOAD_MOVIE_DETAILS',\n  MOVIE_LOADED_SUCCESS: '[movieDetails] MOVIE_LOADED_SUCCESS',\n  MOVIE_LOADED_ERROR: '[movieDetails] MOVIE_LOADED_ERROR',\n};\n\nexport type ActionTypes = LOAD_MOVIE_DETAILS_ACTION | string;\n\nexport interface LOAD_MOVIE_DETAILS_ACTION {\n  movieId: string;\n}\n\nexport const LOAD_MOVIE_DETAILS = createAction<LOAD_MOVIE_DETAILS_ACTION>(ActionNames.LOAD_MOVIE_DETAILS);\nexport const MOVIE_LOADED_SUCCESS = createAction(ActionNames.MOVIE_LOADED_SUCCESS);\nexport const MOVIE_LOADED_ERROR = createAction<string>(ActionNames.MOVIE_LOADED_ERROR);","import { IMovieDetailsState } from \"./movieDetailsState\";\nimport { handleActions } from \"redux-actions\";\nimport { ActionNames, ActionTypes, LOAD_MOVIE_DETAILS_ACTION } from \"./movieDetailsAction\";\n\nconst initialState: IMovieDetailsState = {\n  currentId: '',\n  error: '',\n  isLoaded: false,\n  isLoading: false,\n};\n\nconst reducer = handleActions<IMovieDetailsState, ActionTypes>({\n  [ActionNames.LOAD_MOVIE_DETAILS]: (state, action) => {\n    const { movieId } = action.payload as LOAD_MOVIE_DETAILS_ACTION;\n    return {\n      ...state,\n      error: '',\n      isLoading: true,\n      isLoaded: false,\n      currentId: movieId,\n    };\n  },\n  [ActionNames.MOVIE_LOADED_SUCCESS]: (state) => {\n    return {\n      ...state,\n      error: '',\n      isLoaded: true,\n      isLoading: false,\n    };\n  },\n  [ActionNames.MOVIE_LOADED_ERROR]: (state, action) => {\n    const error = action.payload as string;\n    return {\n      ...state,\n      isLoading: false,\n      isLoaded: false,\n      error,\n    }\n  }\n}, initialState);\n\nexport default reducer;","import { createAction } from \"redux-actions\";\n\nexport const ActionNames = {\n  LOAD_APP: '[application] LOAD_APP',\n  APP_LOADED: '[application] APP_LOADED',\n};\n\nexport const LOAD_APP = createAction(ActionNames.LOAD_APP);\nexport const APP_LOADED = createAction(ActionNames.APP_LOADED);","import { handleActions } from \"redux-actions\";\nimport { IApplicationState } from \"./applicationState\";\nimport { ActionNames } from './applicationActions';\n\nconst initialState: IApplicationState = {\n  isLoaded: false,\n}\n\nconst reducer = handleActions<IApplicationState>({\n  [ActionNames.APP_LOADED]: (state) => {\n    return {\n      ...state,\n      isLoaded: true,\n    }\n  }\n}, initialState);\n\nexport default reducer;","import { createAction } from \"redux-actions\"\nimport { IMovieSearchResult } from \"../../common/types/state/IMovieSearchResult\";\n\nexport const ActionNames = {\n  UPDATE_QUERY: '[search] UPDATE_QUERY',\n  START_LOADING: '[search] START_LOADING',\n  RESULTS_LOADED: '[search] RESULTS_LOADED',\n  RESULTS_ERROR: '[search] RESULTS_ERROR',\n}\n\nexport type ActionTypes = string | IMovieSearchResult[];\n\nexport const UPDATE_QUERY = createAction<string>(ActionNames.UPDATE_QUERY);\nexport const START_LOADING = createAction(ActionNames.START_LOADING);\nexport const RESULTS_ERROR = createAction<string>(ActionNames.RESULTS_ERROR);\nexport const RESULTS_LOADED = createAction<IMovieSearchResult[]>(ActionNames.RESULTS_LOADED);","import { ISearchState } from \"./searchState\";\nimport { handleActions } from \"redux-actions\";\nimport { ActionNames, ActionTypes } from './searchActions';\nimport { IMovieSearchResult } from \"../../common/types/state/IMovieSearchResult\";\n\nconst initialState: ISearchState = {\n  isLoading: false,\n  query: '',\n  results: [],\n  error: '',\n};\n\nconst reducer = handleActions<ISearchState, ActionTypes>({\n  [ActionNames.START_LOADING]: (state) => {\n    return {\n      ...state,\n      isLoading: true,\n    }\n  },\n  [ActionNames.UPDATE_QUERY]: (state, action) => {\n    return {\n      ...state,\n      query: action.payload as string,\n    }\n  },\n  [ActionNames.RESULTS_LOADED]: (state, action) => {\n    return {\n      ...state,\n      results: action.payload as IMovieSearchResult[],\n      isLoading: false,\n    }\n  },\n  [ActionNames.RESULTS_ERROR]: (state, action) => {\n    return {\n      ...state,\n      isLoading: false,\n      error: action.payload as string,\n    }\n  }\n}, initialState);\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport { IRootState } from './IRootState';\nimport moviesReducer from './movies/moviesReducer';\nimport movieDetailsReducer from './movieDetails/movieDetailsReducer';\nimport applicationReducer from './application/applicationReducer';\nimport searchReducer from './search/searchReducer';\n\nexport default combineReducers<IRootState>({\n  movies: moviesReducer,\n  movieDetails: movieDetailsReducer,\n  application: applicationReducer,\n  search: searchReducer,\n});","import axios from 'axios';\nimport { IApiMovie } from '../../types/api/IApiMovie';\nimport { IApiError } from '../../types/api/IApiError';\n\nconst getApiKey = () => {\n  return process.env.REACT_APP_MOVIE_API_KEY;\n}\n\nconst BASE_URL = 'http://www.omdbapi.com';\n\nconst isError = (response: IApiMovie | IApiError): response is IApiError => {\n  return response.Response === 'False';\n};\n\nexport async function getMovie(id: string) {\n  const url = `${BASE_URL}/?i=${id}&apikey=${getApiKey()}`;\n\n  try {\n    const response = await axios.get<IApiMovie | IApiError>(url);\n    \n    if (isError(response.data)) {\n      throw new Error(response.data.Error);\n    } else {\n      return response.data;\n    }\n  } catch (err) {\n    throw err;\n  }\n}\n","import { IApiMovie } from \"../types/api/IApiMovie\";\nimport { IMovie } from \"../types/state/IMovie\";\nimport { EMPTY_API_VALUE } from '../constants';\nimport { IApiSearchMovie } from \"../types/api/IApiSearchResponse\";\nimport { IMovieSearchResult } from \"../types/state/IMovieSearchResult\";\n\nexport const movieFromApi = (response: IApiMovie): IMovie => {\n  return {\n    id: response.imdbID,\n    genre: response.Genre,\n    language: response.Language,\n    plot: response.Plot,\n    poster: response.Poster === EMPTY_API_VALUE ? '' : response.Poster,\n    rating: Number.parseFloat(response.imdbRating),\n    votes: response.imdbVotes,\n    title: response.Title,\n    year: response.Year,\n    actors: response.Actors,\n    director: response.Director,\n    runtime: response.Runtime,\n    writer: response.Writer,\n    released: response.Released,\n  };\n};\n\nexport const searchResultFromApi = (response: IApiSearchMovie): IMovieSearchResult => {\n  return {\n    id: response.imdbID,\n    title: response.Title,\n    poster: response.Poster === EMPTY_API_VALUE ? '' : response.Poster,\n    year: response.Year,\n  }\n}","export const LOCAL_STORAGE_KEY = 'REACT_APP_MOVIES';\nexport const EMPTY_API_VALUE = 'N/A';","import { set } from 'local-storage';\nimport { Action } from 'redux-actions';\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { LOCAL_STORAGE_KEY } from '../common/constants';\nimport { getMovie } from '../common/service/api/getMovie';\nimport { movieFromApi } from '../common/service/mapper';\nimport { ILocalStorage } from '../common/types/local-storage/ILocalStorage';\nimport { IRootState } from '../state/IRootState';\nimport { ActionNames, LOAD_MOVIE_DETAILS_ACTION, MOVIE_LOADED_ERROR, MOVIE_LOADED_SUCCESS } from '../state/movieDetails/movieDetailsAction';\nimport { ADD_MOVIES } from '../state/movies/moviesActions';\n\nexport function* _loadMovieDetails(action: Action<LOAD_MOVIE_DETAILS_ACTION>) {\n  try {\n    const response = yield call(getMovie, action.payload.movieId);\n    const movie = movieFromApi(response);\n\n    yield put(ADD_MOVIES([movie]));\n    const state: IRootState = yield select();\n\n    set<ILocalStorage>(LOCAL_STORAGE_KEY, {\n      movies: Object.entries(state.movies).map(([id, movie]) => ({ ...movie }))\n    });\n    \n    yield put(MOVIE_LOADED_SUCCESS());\n  } catch (err) {\n    yield put(MOVIE_LOADED_ERROR(err.message));\n  }\n}\n\nexport function* watchLoadMovieDetails() {\n  yield takeLatest(\n    ActionNames.LOAD_MOVIE_DETAILS,\n    _loadMovieDetails,\n  );\n}","import { get } from 'local-storage';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport { ActionNames, APP_LOADED } from '../state/application/applicationActions';\nimport { ILocalStorage } from '../common/types/local-storage/ILocalStorage';\nimport { ADD_MOVIES } from '../state/movies/moviesActions';\nimport { LOCAL_STORAGE_KEY } from '../common/constants';\n\nexport function* _loadMoviesFromLocalStorage() {\n  const storageData = get<ILocalStorage>(LOCAL_STORAGE_KEY);\n\n  if (storageData !== null) {\n    yield put(ADD_MOVIES(storageData.movies));\n  }\n\n  yield put(APP_LOADED());\n}\n\nexport function* watchAppLoaded() {\n  yield takeLatest(\n    ActionNames.LOAD_APP,\n    _loadMoviesFromLocalStorage, \n  );\n}","import axios from 'axios';\nimport { IApiError } from '../../types/api/IApiError';\nimport { IApiSearchResponse } from '../../types/api/IApiSearchResponse';\n\nconst getApiKey = () => {\n  return process.env.REACT_APP_MOVIE_API_KEY;\n}\n\nconst BASE_URL = 'http://www.omdbapi.com';\n\nconst isError = (response: IApiSearchResponse | IApiError): response is IApiError => {\n  return response.Response === 'False';\n};\n\nexport async function searchMovie(query: string): Promise<IApiSearchResponse> {\n  const url = `${BASE_URL}/?s=${query}&apikey=${getApiKey()}`;\n\n  try {\n    const response = await axios.get<IApiSearchResponse | IApiError>(url);\n    \n    if (isError(response.data)) {\n      throw new Error(response.data.Error);\n    } else {\n      return response.data;\n    }\n  } catch (err) {\n    throw err;\n  }\n}\n","import { debounce, put, call } from 'redux-saga/effects';\nimport { Action } from 'redux-actions';\nimport { ActionNames, START_LOADING, RESULTS_LOADED, RESULTS_ERROR } from '../state/search/searchActions';\nimport { searchMovie } from '../common/service/api/searchMovie';\nimport { searchResultFromApi } from '../common/service/mapper';\nimport { IApiSearchResponse } from '../common/types/api/IApiSearchResponse';\n\nfunction* findMovies(action: Action<string>) {\n  const query = action.payload;\n\n  try {\n    if (query.length >= 3) {\n      yield put(START_LOADING());\n\n      const response = (yield call(searchMovie, query)) as IApiSearchResponse;\n      const results = response.Search.map(searchResultFromApi);\n      yield put(RESULTS_LOADED(results));\n    }\n  } catch (err) {\n    yield put(RESULTS_ERROR(err.message))\n  }\n}\n\nexport function* watchUpdateQuery() {\n  yield debounce(\n    300,\n    ActionNames.UPDATE_QUERY,\n    findMovies,\n  );\n}","import { all } from 'redux-saga/effects';\nimport { watchLoadMovieDetails } from './loadMovieDetailsSaga';\nimport { watchAppLoaded } from './loadMoviesFromStorageSaga';\nimport { watchUpdateQuery } from './searchMoviesSaga';\n\nexport default function* () {\n  yield all([\n    watchLoadMovieDetails(),\n    watchAppLoaded(),\n    watchUpdateQuery(),\n  ]);\n}","import { compose, applyMiddleware, createStore as _createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../state/rootReducer';\nimport rootSaga from '../effects/rootSaga';\nimport { IRootState } from '../state/IRootState';\n\nexport const createStore = (initialState: Partial<IRootState> = {}) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [\n    thunk,\n    sagaMiddleware,\n  ];\n\n  const reducer = rootReducer;\n  const createStoreWithMiddleware = compose(applyMiddleware(...middlewares))(_createStore);\n  \n  const store = createStoreWithMiddleware(reducer, initialState);\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n","import { useParams } from \"react-router-dom\";\n\nexport const useMovieRouteParams = () => useParams<{ id: string}>();\n\nexport const definition = {\n  home: '/',\n  search: '/search',\n  movie: '/movie/:id'\n};\n\nexport const path = {\n  goToHomePage: () => '/',\n  goToSearchPage: () => '/search',\n  goToMovie: (id: string) => `/movie/${id}`,\n};\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  paper: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n}))\n\nconst PageWrapper = ({ children }: Props) => {\n  const style = useStyle();\n  return (\n    <Box mt={2}>\n      <Paper className={style.paper}>\n        {children}\n      </Paper>\n    </Box>\n  );\n}\n\nexport default PageWrapper;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core';\nimport PageWrapper from '../common/components/PageWrapper/PageWrapper';\nimport { Link } from 'react-router-dom';\nimport { path } from '../common/routing/routes';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  appBarSpacer: {\n    ...theme.mixins.toolbar\n  },\n  appTitle: {\n    color: theme.typography.h6.color,\n  }\n}));\n\nconst AppPage = ({ children }: Props) => {\n  const style = useStyle();\n  return (\n    <div>\n      <AppBar>\n        <Toolbar>\n          <Link to={path.goToHomePage()} style={{ color: 'white' }}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Movie app\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <div className={style.appBarSpacer}></div>\n        <PageWrapper>\n          {children}\n        </PageWrapper>\n      </Container>\n    </div>\n  );\n};\n\nexport default AppPage;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IMovie } from '../../common/types/state/IMovie';\nimport { useMovieRouteParams } from '../../common/routing/routes';\nimport { IRootState } from '../../state/IRootState';\nimport { LOAD_MOVIE_DETAILS, MOVIE_LOADED_SUCCESS } from '../../state/movieDetails/movieDetailsAction';\nimport { IMovieDetailsState } from '../../state/movieDetails/movieDetailsState';\n\ninterface ChildrenProps {\n  isLoaded: boolean;\n  movie: null | IMovie;\n  error: string;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n}\n\nconst MoviePageData = ({ children }: Props) => {\n  const { id } = useMovieRouteParams();\n  const movie = useSelector<IRootState, IMovie>(state => state.movies[id]);\n  const { isLoaded, error } = useSelector<IRootState, IMovieDetailsState>(state => state.movieDetails);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!movie) {\n      dispatch(LOAD_MOVIE_DETAILS({ movieId: id }));\n    } else {\n      dispatch(MOVIE_LOADED_SUCCESS());\n    }\n  }, [movie, id, dispatch]);\n\n  return (\n    <div>\n      {children({ isLoaded, movie, error })}\n    </div>\n  )\n};\n\nexport default MoviePageData;","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  errorNotification: {\n    color: theme.palette.error.main,\n    border: `3px solid ${theme.palette.error.main}`,\n    padding: theme.spacing(2),\n  }\n}));\n\nconst ErrorNotification = ({ children }: Props) => {\n  const style = useStyle();\n  \n  return (\n    <div className={style.errorNotification}>{children}</div>\n  )\n};\n\nexport default ErrorNotification;","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { IMovie } from '../../../common/types/state/IMovie';\n\ninterface Props {\n  movie: IMovie;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n\n  },\n  image: {\n    width: '100%'\n  }\n}))\n\nconst MoviePoster = ({ movie }: Props) => {\n  const style = useStyle();\n\n  if (!movie.poster.length) {\n    return null;\n  }\n\n  return (\n    <div className={style.container}>\n      <img className={style.image} src={movie.poster} alt={`Movie poster for movie: \"${movie.title}\"`}/>\n    </div>\n  )\n};\n\nexport default MoviePoster;","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\ninterface Props {\n  title: React.ReactNode;\n  value: React.ReactNode;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    fontFamily: theme.typography.fontFamily,\n    padding: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  title: {\n    fontSize: theme.typography.pxToRem(16),\n    fontWeight: theme.typography.fontWeightBold,\n    flex: '1',\n  },\n  value: {\n    flex: '1',\n    fontSize: theme.typography.pxToRem(16),\n  }\n}))\n\nconst MovieInfo = ({ title, value }: Props) => {\n  const style = useStyle();\n\n  return (\n    <dl className={style.item}>\n      <dt className={style.title}>{title}</dt>\n      <dd className={style.value}>{value}</dd>\n    </dl>\n  )\n}\n\nexport default MovieInfo;","import React from 'react';\nimport { IMovie } from '../../../common/types/state/IMovie';\nimport Rating from '@material-ui/lab/Rating';\nimport { Typography } from '@material-ui/core';\n\ninterface Props {\n  movie: IMovie;\n}\n\nconst MovieRating = ({ movie }: Props) => {\n  return (\n    <div>\n      <Rating readOnly value={movie.rating} max={10}/>\n      <Typography component=\"legend\">{movie.rating}/10 | {movie.votes} votes</Typography>\n    </div>\n  );\n}\n\nexport default MovieRating;","import React from 'react';\nimport { IMovie } from '../../../common/types/state/IMovie';\n\ninterface Props {\n  movie: IMovie;\n}\n\nconst MoviePlot = ({ movie }: Props) => {\n  return (\n    <p>\n      {movie.plot}\n    </p>\n  );\n}\n\nexport default MoviePlot;","import React from 'react';\nimport { IMovie } from '../../common/types/state/IMovie';\nimport { CircularProgress, Grid, Typography, makeStyles } from '@material-ui/core';\nimport ErrorNotification from '../../common/components/ErrorNotification/ErrorNotification';\nimport MoviePoster from './components/MoviePoster';\nimport MovieInfo from './components/MovieInfo';\nimport MovieRating from './components/MovieRating';\nimport MoviePlot from './components/MoviePlot';\n\ninterface Props {\n  movie: IMovie | null;\n  isLoaded: boolean;\n  error: string;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  title: {\n    wordBreak: 'break-word',\n  }\n}));\n\nconst MoviePageDisplay = ({ movie, error, isLoaded }: Props) => {\n  const style = useStyle();\n  if (!isLoaded || !movie) {\n    return (\n      <CircularProgress />\n    );\n  }\n\n  if (error.length) {\n    return (\n      <ErrorNotification>{error}</ErrorNotification>\n    )\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={4}>\n        <Typography variant=\"h4\" component=\"h2\" className={style.title}>{movie.title} ({movie.year})</Typography>\n        <MoviePoster movie={movie}/>\n      </Grid>\n      <Grid item xs={12} sm={8}>\n        <MovieInfo title={\"Genre\"} value={movie.genre}/>\n        <MovieInfo title={\"Language\"} value={movie.language}/>\n        <MovieInfo title={\"Released\"} value={movie.released}/>\n        <MovieInfo title={\"Rating\"} value={<MovieRating movie={movie}/>}/>\n        <MovieInfo title={\"Plot\"} value={<MoviePlot movie={movie}/>}/>\n        <MovieInfo title={\"Actors\"} value={movie.actors}/>\n        <MovieInfo title={\"Writer\"} value={movie.writer}/>\n        <MovieInfo title={\"Director\"} value={movie.director}/>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default MoviePageDisplay;","import React from 'react';\nimport { IMovieSearchResult } from '../../../../common/types/state/IMovieSearchResult';\nimport { Link } from 'react-router-dom';\nimport { path } from '../../../../common/routing/routes';\nimport { makeStyles, Avatar } from '@material-ui/core';\n\ninterface Props {\n  movie: IMovieSearchResult;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexDirection: 'row'\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n    display: 'inline-block',\n  }\n}));\n\nconst SearchInputLabel = ({  movie }: Props) => {\n  const style = useStyle();\n\n  return (\n    <Link to={path.goToMovie(movie.id)} \n      className={style.item} \n      style={{ textDecoration: 'none' }}>\n      <Avatar variant=\"square\" src={movie.poster}/>\n      <div className={style.title}>\n        {movie.title} ({movie.year})\n      </div>\n    </Link>\n  );\n}\n\nexport default SearchInputLabel;","import { TextField, CircularProgress } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRootState } from '../../../../state/IRootState';\nimport { UPDATE_QUERY } from '../../../../state/search/searchActions';\nimport { ISearchState } from '../../../../state/search/searchState';\nimport SearchInputLabel from './SearchInputLabel';\n\nconst SearchInput = () => {\n  const {\n    isLoading,\n    query,\n    results\n  } = useSelector<IRootState, ISearchState>(state => state.search);\n  const dispatch = useDispatch();\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(UPDATE_QUERY(event.target.value));\n  }\n\n  return (\n    <div>\n      <Autocomplete \n        options={results}\n        renderOption={(option) => <SearchInputLabel movie={option}/>}\n        getOptionLabel={(option) => option.title}\n        renderInput={(params) => (\n          <TextField \n            {...params}\n            value={query}\n            onChange={onInputChange}\n            placeholder=\"Search movies e.g. Forrest Gump\"\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              endAdornment: (\n                <>\n                {isLoading ? <CircularProgress color=\"primary\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n                </>\n              )\n            }}\n          />\n        )}\n      />\n    </div>\n  )\n}\n\nexport default SearchInput;","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { IMovie } from '../../../../common/types/state/IMovie';\n\nconst useStyle = makeStyles((theme) => ({\n  posterContainer: {\n    margin: '0 auto',\n  },\n  poster: {\n    width: 'auto',\n    height: '150px'\n  },\n  fallback: {\n    backgroundColor: theme.palette.grey[100],\n    display: 'inline-block',\n    height: '150px',\n    width: '100px'\n  }\n}));\n\ninterface Props {\n  movie: IMovie;\n}\n\nconst ViewHistoryPoster = ({ movie }: Props) => {\n  const style = useStyle();\n\n  return (\n    <div className={style.posterContainer}>\n      {movie.poster.length ? \n        <img\n          alt={`Poster for movie: ${movie.title}`} \n          className={style.poster} \n          src={movie.poster}/>\n        : <div className={style.fallback}></div>}\n    </div>\n  );\n}\n\nexport default ViewHistoryPoster;","import React from 'react';\nimport { IMovie } from '../../../../common/types/state/IMovie';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { path } from '../../../../common/routing/routes';\nimport ViewHistoryPoster from './ViewHistoryPoster';\n\ninterface Props {\n  movie: IMovie;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '230px',\n    border: `1px solid ${theme.palette.grey[300]}`,\n    padding: theme.spacing(1),\n  },\n  title: {\n    textAlign: 'center',\n  }\n}));\n\nconst ViewHistoryItem = ({ movie }: Props) => {\n  const style = useStyle();\n  return (\n    <div className={style.item}>\n      <ViewHistoryPoster movie={movie}/>\n      <div className={style.title}>\n        <Link to={path.goToMovie(movie.id)} style={{ textDecoration: 'none', color: 'black' }}>\n          <Typography component=\"h3\" variant=\"h6\">\n            {movie.title}\n          </Typography>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewHistoryItem;","import React from 'react';\nimport { IRootState } from '../../../../state/IRootState';\nimport { useSelector } from 'react-redux';\nimport { IMovie } from '../../../../common/types/state/IMovie';\nimport { Typography, makeStyles, Grid } from '@material-ui/core';\nimport ViewHistoryItem from './ViewHistoryItem';\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    margin: '0 auto',\n    marginTop: theme.spacing(3),\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst getLoadedMovies = (state: IRootState) => \n  Object.entries(state.movies).map(([id, movie]) => ({...movie})).slice(0, 6); \n\nconst ViewHistory = () => {\n  const movies = useSelector<IRootState, IMovie[]>(getLoadedMovies);\n  const style = useStyle();\n\n  if (movies.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={style.container}>\n      <Typography variant=\"h5\" component=\"h2\" className={style.title}>You've already viewed</Typography>\n      <Grid container spacing={1}>\n        {movies.map((movie) => (\n          <Grid key={movie.id} item xs={12} sm={6} md={4} lg={3}>\n            <ViewHistoryItem movie={movie}/>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default ViewHistory;","import React from 'react';\nimport MoviePageData from './MoviePageData';\nimport MoviePageDisplay from './MoviePageDisplay';\nimport SearchInput from '../shared/components/SearchInput/SearchInput';\nimport ViewHistory from '../shared/components/ViewHistory/ViewHistory';\nimport { makeStyles, Divider } from '@material-ui/core';\n\nconst useStyle = makeStyles((theme) => ({\n  inputContainer: {\n    [theme.breakpoints.up('sm')] : {\n      width: '50%',\n    },\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    margin: '0 auto',\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nconst MoviePage = () => {\n  const style = useStyle();\n\n  return (\n    <MoviePageData>\n      {({ isLoaded, movie, error }) => (\n        <div>\n          <div className={style.inputContainer}>\n            <SearchInput />\n          </div>\n          <MoviePageDisplay \n            movie={movie}\n            isLoaded={isLoaded}\n            error={error}/>\n          <Divider />\n          <ViewHistory />\n        </div>\n      )}\n    </MoviePageData>\n  );\n}\n\nexport default MoviePage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport SearchInput from '../shared/components/SearchInput/SearchInput';\nimport ViewHistory from '../shared/components/ViewHistory/ViewHistory';\n\nconst useStyle = makeStyles((theme) => ({\n  inputContainer: {\n    [theme.breakpoints.up('sm')] : {\n      width: '50%',\n    },\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    margin: '0 auto',\n  },\n}))\n\nconst SearchPage = () => {\n  const style = useStyle();\n  return (\n    <div>\n      <div className={style.inputContainer}>\n        <SearchInput />\n      </div>\n      <div>\n        <ViewHistory />\n      </div>\n    </div>\n  )\n}\n\nexport default SearchPage;","import React, { useEffect } from 'react';\nimport { Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { definition, path } from '../common/routing/routes';\nimport AppPage from './AppPage';\nimport MoviePage from '../pages/movie-page/MoviePage';\nimport SearchPage from '../pages/search-page/SearchPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_APP } from '../state/application/applicationActions';\nimport { IRootState } from '../state/IRootState';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const isAppLoaded = useSelector<IRootState, boolean>(state => state.application.isLoaded);\n\n  useEffect(() => {\n    if (!isAppLoaded) {\n      dispatch(LOAD_APP());\n    }\n  }, [dispatch, isAppLoaded]);\n\n  if (!isAppLoaded) {\n    return null;\n  }\n\n  return (\n    <Router basename={\"/movie-browser\"}>\n      <Switch>\n        <Route exact path={definition.home}>\n          <Redirect to={path.goToSearchPage()}/>\n        </Route>\n        <Route exact path={definition.search}>\n          <AppPage>\n            <SearchPage />\n          </AppPage>\n        </Route>  \n        <Route exact path={definition.movie}>\n          <AppPage>\n            <MoviePage />\n          </AppPage>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from './createStore';\nimport AppRouter from './AppRouter';\nimport isDev from '../common/utils/isDev';\n\nconst App = () => {\n  const store = createStore();\n\n  if (isDev()) {\n    (window as { [key: string]: any })['getState'] = () => store.getState();\n  }\n  \n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './core/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}